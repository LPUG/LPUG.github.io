
title: Archive
---
body:

Previous presentations and themes.

## 09. August 2016

### Rust for Pythonistas

The slides are available at [github](https://github.com/klingtnet/lpug-Rust?files=1) and [slideshare](http://www.slideshare.net/AndreasLinz1/rust-for-pythonistas-lpug?qid=8895be3c-0aa5-4555-917a-6d5fb6df6b8b&v=&b=&from_search=1).

## 8. November um 19:00 Uhr

Zum Treffen gab es einen Einführungsvortrag zu neuronalen Netzen. Theoretische
Hintergründe wurde skiziert und eine Reihe von Implementierungen in Python
vorgestellt: Basierend auf numpy, scikit-learn, tensorflow und keras. Die
Folien und Code sind [in diesem Repo zu finden](https://github.com/miku/nntour).
Die Präsentation mündete in eine Diskussion zu intelligenten Algorithmen im
Allgemeinen und auch ihre gesellschaftlichen Auswirkungen.

## 13. Dezember 2016 um 19:00 Uhr

Diesmal hatten ein vorweihnachtliches Treffen mit offenem Thema.
Wir diskutierten über die letzten Entwicklungen bei Python.
Dabei gab es immer neue Python-Bibliotheken zu entdecken.

## 10. Januar 2017 um 19:00 Uhr

Unser Thema war diesmal die nebenläufige und parallele Programmierung.
Dabei haben wir uns vor allem mit den Unterschieden in den
Anwendungsfällen und der Programmierung mit `multiprocessing` und
`asyncio` beschäftigt.

Dazu haben wir mit Code-Beispielen gearbeitet, die zeigen, wie
sich mit diesen Methoden Rechenzeit einsparen lassen kann oder
eben nicht.


## 14. Februar 2017 um 19:00 Uhr

Diesmal hatten wir eine freie Diskussion zu Pythonthemen.
Wir haben uns geschaut welche neuen Bibliotheken in der letzten
Zeit erschien sind.

# 14. März 2017 um 19:00 Uhr


Wir hatten einen Vortrag:

Mike Müller

**Statische Typisierung für Python**

Python ist eine dynamisch getypte Sprache.
Das wird auch in Zukunft so bleiben.
Mit [mypy](http://mypy-lang.org/) und dem Modul `typing` der
Standardbibliothek ist es aber auch möglich statische Typen als Hinweise
hinzuzufügen.

Diese statischen Typen wertet Python zur Laufzeit **nicht** aus.
mypy arbeitet als Werkzeug mit dem Quelltext und überprüft die Richtigkeit
der Typen ähnlich wie ein Compiler bei statisch getypten Sprachen.
Der Vortrag stellte das generelle Vorgehen für die Nutzung der
optionalen statischen Typisierung mit mypy und die Neuerungen, die Python 3.6
hier mitbringt vor.

# 11. April 2017 um 19:00 Uhr

Diesmal hatten wir wieder eine freie Diskussion zu Pythonthemen.


