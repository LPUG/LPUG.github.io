title: Leipzig Python User Group
---
body:


# 10. Mai 2022
# Pandas-Alternativen
## Ein Erfahrungsaustausch

Wir treffen uns vor Ort im Basislager  **und** online:
([BBB-Raum](https://b3.python-academy.de/b/mik-3zi-rxv-vyp) ab 18:45 Uhr geöffnet).
Die Teilnahme sollte mit jedem modernen Browser möglich sein.

Die Bibliothek [pandas](https://pandas.pydata.org/) ist in der Datenanalyse weit
verbreitet.
Es gibt eine Reihe von Bibliotheken, die sich an die Funktionsweise, also die
API von pandas anlehnen und eine Alternative darstellen können.
Weiterhin gibt es Systeme mit pandas-artiger Schnittstelle,
die damit im Idealfall den Einarbeitungsaufwand auf Null minimieren.
Wir wollen uns einige (ausgewählter) dieser Systeme wie:

* [Dask](https://pandas.pydata.org/) - parallele und verteile Ausführung von
   beliebigen Python-Programmen mit leichter Anwendung auf pandas
* [PandaPy](https://github.com/firmai/pandapy) - pandas-Alternative basierend
   auf dem "structured NumPy datatype", schneller für kleinere DataFrames
* [xarray](https://docs.xarray.dev/en/stable/index.html) -
  "pandas für mehr dimensionale Daten"
* [Modin](https://modin.readthedocs.io/en/stable/index.html) - parallele
   Ausführung von pandas-Code, nutzt Dask oder andere Systeme
* [Datatable](https://github.com/h2oai/datatable) - pandas-ähnlich für
   parallele Datenverarbeitung mit "out-of-memory datasets"
* [Polars](https://github.com/pola-rs/polars) - schnelle, in Rust implementierte
   DataFrame-Bibliothek basierend auf dem
   [Apache Arrow Columnar Format](https://arrow.apache.org/docs/format/Columnar.html)
* [Vaex](https://github.com/vaexio/vaex) performance-orientierte pandas-artige
   Bibliothek mit memory mapping und lazy computations
* [Pyspark](https://spark.apache.org/docs/latest/api/python/index.html#) -
   Python-Schnittstelle zu Apache mit pandas-artiger API
* [Koalas](https://github.com/databricks/koalas) - pandas-API für Apache Spark
* [cuDF](https://github.com/rapidsai/cudf) - GPU DataFrames basierend auf dem
  [Apache Arrow Columnar Format](https://arrow.apache.org/docs/format/Columnar.html)
* viele weitere ...

kurz ansehen.
Hat jemand Erfahrungen damit?
Was sind die Vor- und Nachteile dieser Systeme?




----------------

Die Treffen der User Group finden jeden zweiten Dienstag im Monat um 19 Uhr statt.
Themenvorschläge sind immer willkommen.

Datum      | Thema                                                          | Vortragende
---------- | -------------------------------------------------------------- | -----------
10.05.2022 | TBD |
14.06.2022 | TBD |
12.07.2022 | TBD |
09.08.2022 | TBD |



```python
location = {
    'venue': 'Basislager Coworking',
    'street': 'Peterssteinweg 14',
    'city': '04107 Leipzig',
    'room': 'Olymp, Erdgeschoss'
}
```

Aktuelle Informationen zu Treffen gibt es auch auf unserer
[Mailingliste](https://mail.python.org/mailman3/lists/lpug.python.org/)
und über unsere
[Meetup-Gruppe](https://www.meetup.com/de-DE/Leipzig-Python-User-Group/).
Wer eine Themenvorschlag für ein Treffen hat oder einen Vortrag halten möchte,
sollte eine E-Mail mit Details an diese Liste schreiben.

Wer nicht in der Nähe von Leipzig wohnt, sich aber trotzdem mit
Python-Enthusiasten treffen möchte,
findet auf der [PySV-Community-Seite](http://python-verband.org/community) eine Liste von
Nutzergruppentreffen in Deutschland.
